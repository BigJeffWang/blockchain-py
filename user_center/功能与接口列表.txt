1.注册
api.add_resource(InvestUserGenerateRegisterKeySaltController, "/users/get-register-salt")  # 获取注册salt
api.add_resource(InvestUserGetPictureVCodeController, "/users/send-picture-vcode")  # 发送注册图形验证码
api.add_resource(InvestUserSendRegisterVCodeController, "/users/send-register-vcode")  # 发送注册验证码
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserRegisterController, "/users/register")  # 用户注册
2.用户名密码登陆
api.add_resource(InvestGenerateLoginKeySaltController, "/users/get-login-salt")  # 获取登录salt
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserLoginController, "/users/login")  # 用户登录
3.手机号短信码登陆
api.add_resource(InvestGenerateLoginKeySaltController, "/users/get-login-salt")  # 获取登录salt
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserGetLoginPictureVCodeController, "/users/send-login-picture-vcode")  # 发送手机号验证码登陆图形验证码
api.add_resource(InvestUserSendLoginVCodeController, "/users/send-login-vcode")  # 发送手机号验证码登陆的验证码
api.add_resource(InvestUserLoginByMobileController, "/users/login-by-mobile")  # 用户手机号验证码登录
3.刷新accesstoken
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestRefreshAccessTokenController, "/users/refresh-token")  # 刷新access_token
4.userinfo
api.add_resource(InvestUserClientInfoController, "/users/user-info")  # 客户端投资用户个人信息
5.设置交易密码
api.add_resource(InvestGeneratePayKeySaltController, "/users/get-pay-salt")  # 获取交易密码salt
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserGetPictureVCodeSetPayPDController, "/users/send-set-pay-password-picture-vcode")  # 发送设置交易密码图形验证码
api.add_resource(InvestUserSendSetPayPDVCodeController, "/users/send-set-pay-pd-vcode")  # 发送设置交易密码的验证码
api.add_resource(InvestUserPayPWDController, "/users/set-pay-password")  # 设置支付密码
6.重置交易密码
api.add_resource(InvestGeneratePayKeySaltController, "/users/get-pay-salt")  # 获取交易密码salt
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserGetPictureVCodeResetPayPDController, "/users/send-reset-pay-password-picture-vcode")  # 发送重制交易密码图形验证码
api.add_resource(InvestUserSendResetPayPDVCodeController, "/users/send-reset-pay-pd-vcode")  # 发送重制交易密码的验证码
api.add_resource(InvestUserResetPayPasswordController, "/users/reset-pay-password")  # 重置交易密码
7.设置手机号
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserGetPictureVCodeSetMobileController, "/users/send-set-mobile-picture-vcode")  # 发送设置手机号图形验证码
api.add_resource(InvestUserSendSetMobileVCodeController, "/users/send-set-mobile-vcode")  # 发送设置手机号的验证码
api.add_resource(InvestUserSetMobileController, "/users/set-user-mobile")  # 设置手机号
8.设置email
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserGetPictureVCodeSetEmailController, "/users/send-set-email-picture-vcode")  # 发送设置email图形验证码
api.add_resource(InvestUserSendSetEmailVCodeController, "/users/send-set-email-vcode")  # 发送设置email的验证码
api.add_resource(InvestUserEmailController, "/users/set-email")  # 设置email
9.设置昵称
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserNickNameController, "/users/set-nick-name")  # 设置昵称
10.设置头像
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserAvatarController, "/users/set-avatar")  # 设置头像
11.非登陆状态下，重置登录密码
api.add_resource(InvestUnLoginGenerateLoginKeySaltController, "/users/get-change-unlogin-password-salt")  # 非登陆状态下获取密码盐
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserGetResetPWDPictureVCodeController, "/users/send-resetpwd-picture-vcode")  # 发送重置密码图形验证码
api.add_resource(InvestUserSendResetPWDVCodeController, "/users/send-resetpwd-vcode")  # 发送重置密码验证码
api.add_resource(InvestUserResetLoginPasswordController, "/users/reset-login-password")  # 重置登陆密码
12.登陆状态下，重置登录密码
api.add_resource(InvestLoginGenerateLoginKeySaltController, "/users/get-change-login-password-salt")  # 登陆状态下获取密码盐
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(InvestUserChangeLoginPasswordController, "/users/change-login-password")  # 登录状态下修改登录密码



13.后台用户 登录
api.add_resource(BgGenerateLoginKeySaltController, "/bg/users/get-login-salt")  # 获取登录salt
api.add_resource(InvestUserRegisterSignatureController, "/users/send-register-signature")  # 获取表单提交校验码
api.add_resource(AdminUserLoginController, "/bg/users/login")  # 后台用户登录
14.后台用户 刷新accesstoken
api.add_resource(BgRefreshAccessTokenController, "/bg/users/refresh-token")  # 刷新access_token
15.后台用户 后台权限管理的相关接口（暂时没有使用）
api.add_resource(BgGetUserInfoController, "/bg/users/info")  # 这个是平台用的获取用户信息
api.add_resource(AdminUserRegisterByAdminController, "/bg/users/new-user")  # 后台高权限用户生成普通后台用户
api.add_resource(AdminUserDeleteByAdminController, "/bg/users/delete-user")  # 后台高权限用户删除普通后台用户
api.add_resource(AdminUserChangeRightsByAdminController, "/bg/users/change-user-right")  # 后台高权限用户修改普通后台用户
api.add_resource(AdminUserListRightsByAdminController, "/bg/users/list-user-right")  # 后台高权限用户获取普通后台用户
api.add_resource(AdminListRightsByAdminController, "/bg/users/list-right")  # 后台高权限用户获取所有的模块


16.tokenpark与usercenter交互
api.add_resource(PlatformCheckFormTokenController, "/transfer/<string:token>")  # 后台用户与其他平台交互
17。前台用户与tokenpark交互
api.add_resource(UsersTransferToPlatformController, "/users/<path:path>")  # 用户与其他平台交互
18.后台用户与tokenpark交互
api.add_resource(BgUsersTransferToPlatformController, "/bg/users/<path:path>")  # 用户与其他平台交互
19.未登录用户与tokenpark交互
api.add_resource(CommonTransferToPlatformController, "/common/<path:path>")  # 用户与其他平台交互

20.图片上传
api.add_resource(UploadPhotoController, "/up_photo")  # 图片上传

21.测试环境关闭aes加密解密的获取登录和注册盐
api.add_resource(DevInvestUserGenerateRegisterKeySaltController, "/users/dev-get-register-salt")  # 获取注册salt
api.add_resource(DevInvestGenerateLoginKeySaltController, "/users/dev-get-login-salt")  # 获取登录salt


12-17日，优化了注册流程
注册成功后，用户注册使用的key和nonce直接变成了登陆后使用的key和nonce，以实现功能，注册后直接登陆（无需用户再手动登陆）

12-19日，说明加密原理
1.通过获取盐接口（登陆或注册），客户端将公钥传入服务端
2.服务端生成服务端公钥和私钥，从而生成aes加密的key和nonce。
3.服务端将服务端公钥和盐返回给客户端
4.客户端获取服务端的公钥，生成key和nonce
5.客户端根据key和nonce完成对之后所有接口对加密和解密，与服务端进行交互
6.特别强调。获取注册和登陆盐对接口有两个功能，一个是获取密码对盐，另一个是生成key和nonce。因此不能因为关闭加密功能而不走这个接口！！！！！因为这样客户端是无法获取盐的；忘了密码功能是未登陆状态下设置密码，因此需要仅仅获取盐，因此开放了接口/users/get-change-unlogin-password-salt
















